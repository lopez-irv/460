IDENTIFIER 
char
IDENTIFIER 
my_string
L_BRACKET 
[
INTEGER 
1024
R_BRACKET 
]
SEMICOLON 
;
IDENTIFIER 
procedure
IDENTIFIER 
main
L_PAREN 
(
IDENTIFIER 
void
R_PAREN 
)
L_BRACE 
{
IDENTIFIER 
result
ASSIGNMENT_OPERATOR 
=
IDENTIFIER 
TRUE
SEMICOLON 
;
IDENTIFIER 
my_string
L_BRACKET 
[
INTEGER 
0
R_BRACKET 
]
ASSIGNMENT_OPERATOR 
=
SINGLE_QUOTE 
'
STRING 
\x0
SINGLE_QUOTE 
'
SEMICOLON 
;
IDENTIFIER 
number
ASSIGNMENT_OPERATOR 
=
INTEGER 
3
SEMICOLON 
;
R_BRACE 
}
IDENTIFIER 
int
IDENTIFIER 
number
SEMICOLON 
;
IDENTIFIER 
function
IDENTIFIER 
bool
IDENTIFIER 
random_long_parameter_list
L_PAREN 
(
IDENTIFIER 
int
IDENTIFIER 
ensity
COMMA 
,
IDENTIFIER 
char
IDENTIFIER 
ter
COMMA 
,
IDENTIFIER 
int
IDENTIFIER 
rospective
COMMA 
,
IDENTIFIER 
int
IDENTIFIER 
egrity
COMMA 
,
IDENTIFIER 
char
IDENTIFIER 
latan
COMMA 
,
IDENTIFIER 
char
IDENTIFIER 
coal
COMMA 
,
IDENTIFIER 
int
IDENTIFIER 
elligent
COMMA 
,
IDENTIFIER 
bool
IDENTIFIER 
lean
COMMA 
,
IDENTIFIER 
char
IDENTIFIER 
treuse
COMMA 
,
IDENTIFIER 
char
IDENTIFIER 
ming
COMMA 
,
IDENTIFIER 
int
IDENTIFIER 
uitive
R_PAREN 
)
L_BRACE 
{
IDENTIFIER 
i
ASSIGNMENT_OPERATOR 
=
INTEGER 
1
SEMICOLON 
;
IDENTIFIER 
j
ASSIGNMENT_OPERATOR 
=
INTEGER 
1000
SEMICOLON 
;
IDENTIFIER 
k
ASSIGNMENT_OPERATOR 
=
INTEGER 
25
SEMICOLON 
;
IDENTIFIER 
return
IDENTIFIER 
TRUE
SEMICOLON 
;
R_BRACE 
}
IDENTIFIER 
bool
IDENTIFIER 
result
SEMICOLON 
;
IDENTIFIER 
procedure
IDENTIFIER 
do_nothing
L_PAREN 
(
IDENTIFIER 
void
R_PAREN 
)
L_BRACE 
{
R_BRACE 
}
IDENTIFIER 
int
IDENTIFIER 
i
COMMA 
,
IDENTIFIER 
j
COMMA 
,
IDENTIFIER 
k
SEMICOLON 
;

